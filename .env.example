#COMPOSE_PROJECT_NAME=app-instance-name-or-override
DJANGO_SECRET_KEY=xxx # use `openssl rand -hex 32`
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@mydomain.com
BOT_PORT=3001
APP_PORT=3000
CHAT_API=http://app:3000/api/v1/
BOT_API=http://bots:3001/api/v1/message
POSTGRES_DB=chat # seed data will go here if there is any in the override file
POSTGRES_HOST=pg
POSTGRES_PORT=5432
POSTGRES_USER=postgres
REDIS_HOST=redis
REDIS_PORT_NUMBER=7000
DIGITAL_OCEAN_KEYNAME=<something like lrohde.2017mpd>
DIGITAL_OCEAN_PUBKEY=~/.ssh/id_rsa.pub
DIGITAL_OCEAN_SERVER_NAME=gpt3-chat-server
DIGITAL_OCEAN_FIREWALL_RULES="protocol:tcp,ports:$APP_PORT,address:0.0.0.0/0 protocol:tcp,ports:22,address:0.0.0.0/0 protocol:tcp,ports:80,address:0.0.0.0/0 protocol:tcp,ports:443,address:0.0.0.0/0"
DIGITAL_OCEAN_APP_USER=appuser
DIGITAL_OCEAN_DEPLOY_REPO=https://github.com/lukerohde/gpt3-chat.git
DIGITAL_OCEAN_DOMAIN=example.com
DIGITAL_OCEAN_A_RECORDS=@,www
OPENAI_API_KEY=OPENAI_API_DUMMY_KEY
DJANGO_SUPERUSER_PASSWORD=DJANGO_SUPERUSER_DUMMY_PASSWORD # use `openssl rand -hex 32`
DJANGO_SUPERUSER_TOKEN=DJANGO_SUPERUSER_DUMMY_TOKEN # run ./manage.py createsuperusertoken
POSTGRES_PASSWORD=POSTGRES_DUMMY_PASSWORD # use `openssl rand -hex 32`
REDIS_PASSWORD=REDIS_DUMMY_PASSWORD # use `openssl rand -hex 32`
AWS_PROFILE=xxx---account.user
AWS_DEFAULT_REGION=us-east-1